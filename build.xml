<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="run" name="Egrep">
    <property name="src" location="src"/>
    <property name="test" location="tests"/>
    <property name="target.dir" location="output"/>
    <property name="target.doc.dir" location="${target.dir}/doc" />
    <property name="target.classes.java.dir" location="${target.dir}/classes/java" />
    <property name="target.classes.test.dir" location="${target.dir}/classes/test" />

    <target name="init">
        <tstamp/>
        <mkdir dir="${target.classes.java.dir}"/>
        <mkdir dir="${target.classes.test.dir}"/>
        <mkdir dir="${target.doc.dir}"/>
    </target>

    <target name="compile" depends="init"
            description="compile the source " >
        <javac debug="true" srcdir="${src}" excludes="" destdir="${target.classes.java.dir}"/>
        <javac srcdir="tests/" destdir="${target.classes.test.dir}" classpathref="project.class.path" includeantruntime="false" />
    </target>

    <path id="project.class.path">
        <pathelement location="lib"/>
        <pathelement path="${target.classes.java.dir}"/>
        <pathelement path="${target.classes.test.dir}"/>
        <fileset dir="lib" includes="*.jar"/>
    </path>

    <target name="run" depends="compile"
            description="run examples">
        <property name="regex" value="S(a|g|r)*on" />
        <property name="file" value="./input/56667-0.txt"/>
        <echo>================ Run Object Main ================</echo>
        <java classname="Egrep"
                classpathref="project.class.path" fork="true">
            <arg value="${regex}"/>
            <arg value="${file}"/>
        </java>
    </target>

    <target name="dist" depends="init,clean"
            description="Generer la distribution" >
        <jar basedir="." jarfile="../EGrep_${DSTAMP}.jar"/>
    </target>

    <target name="test" depends="compile">
        <junit printsummary="yes" haltonfailure="yes" fork="yes">
            <formatter type="plain" usefile="false" />
            <test name="AllTests" />
            <classpath refid="project.class.path"/>
        </junit>
    </target>

      <!-- Generate javadocs for current project into ${doc.dir} -->
    <target name="doc" depends="init" description="generate documentation">
        <javadoc destdir="${target.doc.dir}">
            <fileset dir="src"/>
        </javadoc>
    </target>

    <target name="clean"
            description="clean up" >
        <echo>================ Removing temporary files... ================</echo>
        <delete verbose="true"> <!-- Remove all *~ files -->
            <fileset dir="${basedir}" defaultexcludes="no">
                <include name="**/*~"/>
            </fileset>
        </delete>
        <echo>================ Removing build directory ================</echo>
        <delete dir="${target.classes.java.dir}"/>
        <delete dir="${target.doc.dir}"/>
        <delete dir="${target.classes.test.dir}"/>
    </target>
</project>
